{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","console","log","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","name","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useState","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","useRef","data","songEndHandler","onTimeUpdate","ref","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dbb3e2a.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { \n    faPlay, \n    faAngleLeft, \n    faAngleRight,\n    faPause, \n} from '@fortawesome/free-solid-svg-icons'\n\nconst Player = ({currentSong, isPlaying, setIsPlaying, audioRef, setSongInfo, songInfo, songs, setCurrentSong, setSongs}) => {\n\n\n    //event handlers\n\n    const activeLibraryHandler = (nextPrev) =>{\n        const newSongs = songs.map((song) => {\n            if (song.id === nextPrev.id){\n                return{\n                    ...song, \n                    active:true,\n                };\n            }else{\n                return{\n                    ...song,\n                    active:false,\n                };\n            }\n        });\n        setSongs(newSongs)\n    }\n\n    const playerSongHandler= () =>{\n        console.log(audioRef.current);\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n    \n    const getTime = (time) =>{\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor( time % 60)).slice(-2)\n        )\n    };\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value});\n    };\n\n    const skipTrackHandler =  async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === 'skip-forward'){\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]); \n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n            console.log(`next index ${currentIndex+1}`);\n            console.log(`songs index ${songs.length}`);\n        }\n        if(direction === \"skip-back\"){\n            if((currentIndex-1) % songs.length ===-1){\n                await setCurrentSong(songs[songs.length-1]);\n                activeLibraryHandler(songs[songs.length-1]);\n                if (isPlaying) audioRef.current.play();\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]); \n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n        }\n        if (isPlaying) audioRef.current.play();\n    };\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p> {getTime(songInfo.currentTime)} </p> \n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`}} className=\"track\">\n                    <input \n                        min={0} \n                        max={songInfo.duration || 0} \n                        value={songInfo.currentTime} \n                        onChange = {dragHandler}\n                        type=\"range\"\n                    />\n                    <div style={trackAnim} className=\"animate-track\"></div>\n                </div>  \n                <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p> \n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon \n                onClick={() => skipTrackHandler('skip-back')} \n                className=\"skip-back\" \n                size=\"2x\" \n                icon={faAngleLeft} \n                />\n                <FontAwesomeIcon \n                className=\"play\" \n                onClick={playerSongHandler} \n                size=\"2x\" \n                icon={isPlaying? faPause : faPlay} />\n                <FontAwesomeIcon \n                onClick={() => skipTrackHandler('skip-forward')}\n                className=\"skip-forward\" \n                size=\"2x\" \n                icon={faAngleRight} />\n            </div>\n        </div>\n    )\n}\n\nexport default Player;","import React from 'react';\n\nconst Song = ({currentSong}) => {\n    \n    return (\n        <div className=\"song-container\">\n            <img src={currentSong.cover}></img>\n            <h2>  {currentSong.name} </h2>\n            <h3>  {currentSong.artist} </h3>\n        </div>\n    )\n}\n\nexport default Song;","import React from 'react';\n\nconst LibrarySong = ({\n    song, \n    songs, \n    setCurrentSong, \n    id, \n    audioRef, \n    isPlaying, \n    setSongs,\n}) => {\n    \n    const songSelectHandler = async () => {\n        await setCurrentSong(song);\n        //add active state\n        const newSongs = songs.map((song) => {\n            if (song.id === id){\n                return{\n                    ...song, \n                    active:true,\n                };\n            }else{\n                return{\n                    ...song,\n                    active:false,\n                };\n            }\n        });\n        setSongs(newSongs)\n        audioRef.current.play()\n        ///check if song is playing \n        if(isPlaying) audioRef.current.play();\n    }\n\n    return (\n        <div className={`library-song ${song.active ? 'selected' : \"\"}`}  onClick={songSelectHandler}>\n            <img src={song.cover}></img>\n            <div className=\"song-description\">\n                <h3>  {song.name} </h3>\n                <h4>  {song.artist} </h4> \n            </div>\n        </div>\n    )\n}\n\nexport default LibrarySong;","import React from 'react';\nimport LibrarySong from './LibrarySong';\n\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) =>{\n    return (\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map((song) => (\n                <LibrarySong \n                songs={songs}\n                setCurrentSong={setCurrentSong} \n                song={song}\n                key={song.id}\n                id={song.id}\n                audioRef={audioRef}\n                isPlaying={isPlaying}\n                setSongs={setSongs}\n                />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Library;","import React from 'react';\nimport {FontAwesomeIcon, FrontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\n    return(\n        <nav>\n            <h1>Waves</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon icon={faMusic}/>\n            </button>\n        </nav>\n    )\n}\n\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\nreturn [\n    {\n    name: \"Beaver Creek\",\n    cover:\n    \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n    artist: \"Aso, Middle School, Aviino\",\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n    color: [\"#205950\", \"#2ab3bf\"],\n    id: uuidv4(),\n    active: true,\n    },\n    {\n    name: \"Daylight\",\n    cover:\n    \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n    artist: \"Aiguille\",\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n    color: [\"#EF8EA9\", \"#ab417f\"],\n    id: uuidv4(),\n    active: false,\n    },\n    {\n    name: \"Keep Going\",\n    cover:\n    \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n    artist: \"Swørn\",\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n    color: [\"#CD607D\", \"#c94043\"],\n    id: uuidv4(),\n    active: false,\n    },\n    {\n    name: \"Nightfall\",\n    cover:\n    \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n    artist: \"Aiguille\",\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n    color: [\"#EF8EA9\", \"#ab417f\"],\n    id: uuidv4(),\n    active: false,\n    },\n    {\n    name: \"Reflection\",\n    cover:\n    \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n    artist: \"Swørn\",\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n    color: [\"#CD607D\", \"#c94043\"],\n    id: uuidv4(),\n    active: false,\n    },\n    {\n    name: \"Under the City Stars\",\n    cover:\n    \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n    artist: \"Aso, Middle School, Aviino\",\n    audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n    color: [\"#205950\", \"#2ab3bf\"],\n    id: uuidv4(),\n    active: false,\n    },\n    //ADD MORE HERE\n];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\n\n//import components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n//import data;\nimport data from\"./data\"\n\n//import styles\nimport './styles/app.scss';\n\nfunction App() {\n  //state\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n});\nconst timeUpdateHandler = (e) => {\n  const current = e.target.currentTime;\n  const duration = e.target.duration; \n  //calculate %\n  const roundedCurrent = Math.round(current);\n  const roundedDuration = Math.round(duration);\n  const animation = Math.round((roundedCurrent / roundedDuration) * 100)\n  setSongInfo({...songInfo, currentTime: current, duration, animationPercentage:animation})\n};\nconst [libraryStatus, setLibraryStatus] = useState(false); \n  //Ref \n  const audioRef = useRef(null);\n  //create state\n\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false)\n  const  songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]); \n    if(isPlaying) audioRef.current.play()\n  }\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player \n      setSongInfo={setSongInfo}\n      songInfo={songInfo}\n      audioRef={audioRef}\n      currentSong={currentSong} \n      isPlaying={isPlaying}\n      setIsPlaying={setIsPlaying}\n      songs={songs}\n      setCurrentSong={setCurrentSong}\n      setSongs={setSongs}\n        />\n      <Library \n      audioRef={audioRef} \n      songs={songs} \n      setCurrentSong={setCurrentSong}\n      isPlaying={isPlaying}\n      setSongs={setSongs}\n      libraryStatus={libraryStatus}\n      />\n      <audio \n            onTimeUpdate={timeUpdateHandler} \n            ref={audioRef} \n            src={currentSong.audio}\n            onLoadedMetadata={timeUpdateHandler}\n            onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}